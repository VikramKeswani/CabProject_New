/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!*******************************!*\
  !*** ./public/js/ridebook.js ***!
  \*******************************/
fetch("http://localhost:8080/driver/viewfreedriver", {
  method: 'GET'
}).then(function (resp) {
  return resp.json();
}).then(function (data) {
  var driver_id = document.getElementById("driver_Id");
  driver_id.value = data.driverId;
  var customer_id = document.getElementById("customer_Id");
  customer_id.value = localStorage.getItem("userid");
});
var submit = document.getElementById("book-cab");
submit.addEventListener("submit", function (event) {
  event.preventDefault();
  obj = {};
  customer = {};
  drivers = {}; //    customer.customerId = localStorage.getItem("userid");
  //console.log

  customer.customerId = localStorage.getItem("customer_Id");
  drivers.driverId = document.getElementById("driver_Id").value;
  obj.fromLocation = document.getElementById("fromLocation").value;
  obj.toLocation = document.getElementById("toLocation").value;
  obj.fromDateTime = document.getElementById("fromDateTime").value;
  obj.toDateTime = document.getElementById("toDateTime").value;
  obj.distanceKm = document.getElementById("distanceInKm").value;
  obj.status = 1;
  obj.driver = drivers;
  obj.custId = customer;
  fetch("http://localhost:8080/tripbooking/insert", {
    method: 'POST',
    body: JSON.stringify(obj),
    headers: {
      "Content-Type": "application/json"
    }
  }).then(function (data) {
    alert("Record Inserted Successfully" + data);
  });
});
var logout = document.getElementById("logout");
logout.addEventListener("click", function (event) {
  event.preventDefault();
  localStorage.removeItem("userid");
  window.location = "http://127.0.0.1:8081/login.html";
});
var home = document.getElementById("home");
home.addEventListener("click", function (event) {
  event.preventDefault();
  window.location = "http://127.0.0.1:8081/user_dashboard.html";
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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d0IsUUFBeEI7QUFDQUMsRUFBQUEsTUFBTSxDQUFDQyxRQUFQLEdBQWtCLGtDQUFsQjtBQUNILENBSkQ7QUFPSixJQUFNQyxJQUFJLEdBQUdoQyxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsTUFBeEIsQ0FBYjtBQUNJK0IsSUFBSSxDQUFDeEIsZ0JBQUwsQ0FBc0IsT0FBdEIsRUFBZ0MsVUFBU0MsS0FBVCxFQUFlO0FBQzNDQSxFQUFBQSxLQUFLLENBQUNDLGNBQU47QUFFQW9CLEVBQUFBLE1BQU0sQ0FBQ0MsUUFBUCxHQUFrQiwyQ0FBbEI7QUFDSCxDQUpELEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZWV0aW5nYXBwLy4vcHVibGljL2pzL3JpZGVib29rLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2RyaXZlci92aWV3ZnJlZWRyaXZlclwiLHttZXRob2Q6ICdHRVQnfSlcbiAgICAgICAgLnRoZW4ocmVzcCA9PiByZXNwLmpzb24oKSlcbiAgICAgICAgLnRoZW4oZGF0YSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgZHJpdmVyX2lkPWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZHJpdmVyX0lkXCIpO1xuICAgICAgICAgICAgICAgIGRyaXZlcl9pZC52YWx1ZSA9ICBkYXRhLmRyaXZlcklkXG4gICAgICAgICAgICAgICAgY29uc3QgY3VzdG9tZXJfaWQ9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjdXN0b21lcl9JZFwiKTtcbiAgICAgICAgICAgICAgICBjdXN0b21lcl9pZC52YWx1ZT1sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInVzZXJpZFwiKTtcbiAgICAgICAgfSk7XG5cblxuY29uc3Qgc3VibWl0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJib29rLWNhYlwiKVxuXG5zdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBmdW5jdGlvbihldmVudCl7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBvYmo9e31cbiAgICBjdXN0b21lcj17fVxuICAgIGRyaXZlcnM9e31cbi8vICAgIGN1c3RvbWVyLmN1c3RvbWVySWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInVzZXJpZFwiKTtcbiAgICAvL2NvbnNvbGUubG9nXG4gICAgY3VzdG9tZXIuY3VzdG9tZXJJZCA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiY3VzdG9tZXJfSWRcIik7XG4gICAgZHJpdmVycy5kcml2ZXJJZCA9ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkcml2ZXJfSWRcIikudmFsdWVcbiAgICBvYmouZnJvbUxvY2F0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmcm9tTG9jYXRpb25cIikudmFsdWVcbiAgICBvYmoudG9Mb2NhdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidG9Mb2NhdGlvblwiKS52YWx1ZVxuICAgIG9iai5mcm9tRGF0ZVRpbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZyb21EYXRlVGltZVwiKS52YWx1ZVxuICAgIG9iai50b0RhdGVUaW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0b0RhdGVUaW1lXCIpLnZhbHVlXG4gICAgb2JqLmRpc3RhbmNlS20gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRpc3RhbmNlSW5LbVwiKS52YWx1ZVxuICAgIG9iai5zdGF0dXM9MVxuICAgIG9iai5kcml2ZXIgPSBkcml2ZXJzXG4gICAgb2JqLmN1c3RJZCA9IGN1c3RvbWVyXG4gICAgZmV0Y2goXCJodHRwOi8vbG9jYWxob3N0OjgwODAvdHJpcGJvb2tpbmcvaW5zZXJ0XCIsIFxuICAgIHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeShvYmopLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICB9XG59KVxuLnRoZW4oZGF0YSA9PiB7XG4gICAgYWxlcnQoXCJSZWNvcmQgSW5zZXJ0ZWQgU3VjY2Vzc2Z1bGx5XCIrICBkYXRhKTtcbn0gKVxufSk7ICBcblxuXG5cbmNvbnN0IGxvZ291dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibG9nb3V0XCIpXG4gICAgbG9nb3V0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiICwgZnVuY3Rpb24oZXZlbnQpe1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFwidXNlcmlkXCIpXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IFwiaHR0cDovLzEyNy4wLjAuMTo4MDgxL2xvZ2luLmh0bWxcIjtcbiAgICB9KVxuXG5cbmNvbnN0IGhvbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImhvbWVcIilcbiAgICBob21lLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiICwgZnVuY3Rpb24oZXZlbnQpe1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXG5cbiAgICAgICAgd2luZG93LmxvY2F0aW9uID0gXCJodHRwOi8vMTI3LjAuMC4xOjgwODEvdXNlcl9kYXNoYm9hcmQuaHRtbFwiO1xuICAgIH0pIl0sIm5hbWVzIjpbImZldGNoIiwibWV0aG9kIiwidGhlbiIsInJlc3AiLCJqc29uIiwiZGF0YSIsImRyaXZlcl9pZCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJ2YWx1ZSIsImRyaXZlcklkIiwiY3VzdG9tZXJfaWQiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwic3VibWl0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJvYmoiLCJjdXN0b21lciIsImRyaXZlcnMiLCJjdXN0b21lcklkIiwiZnJvbUxvY2F0aW9uIiwidG9Mb2NhdGlvbiIsImZyb21EYXRlVGltZSIsInRvRGF0ZVRpbWUiLCJkaXN0YW5jZUttIiwic3RhdHVzIiwiZHJpdmVyIiwiY3VzdElkIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJoZWFkZXJzIiwiYWxlcnQiLCJsb2dvdXQiLCJyZW1vdmVJdGVtIiwid2luZG93IiwibG9jYXRpb24iLCJob21lIl0sInNvdXJjZVJvb3QiOiIifQ==