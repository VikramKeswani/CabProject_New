/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!**********************************!*\
  !*** ./public/js/user_update.js ***!
  \**********************************/
function appendData(data) {
  var mainContainer = document.getElementById("update_form");
  mainContainer.innerHTML = "<div class=\"container\">      \n        <div class=\"row justify-content-center\">\n            <div class=\"col-12 col-md-8 col-lg-8 col-xl-6\">\n                <div class=\"row\">\n                    <div class=\"col text-center\">\n                        <div class=\"container\">\n                            <h1>UPDATE DETAILS</h1>               \n                        </div>\n                        <br>\n                        <div class=\"container\">\n                        <p class=\"text-h3\" style=\"font-size:2em\">FILL DRIVER DETAILS</p>                        \n                        </div>\n                    </div>\n                </div>\n                <div class=\"row align-items-center\">\n                    <div class=\"col mt-4\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Name\" id=\"username\" value=".concat(data.username, ">\n                    </div>\n                </div>\n                <div class=\"row align-items-center mt-4\">\n                    <div class=\"col\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Unique Id\" id=\"customerId\" disabled>\n                    </div>\n                </div>\n                <div class=\"row align-items-center mt-4\">\n                    <div class=\"col\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Email Id\" id=\"email_address\" value=").concat(data.email_address, ">\n                    </div>\n                    <div class=\"col\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Passowrd\" id=\"password\" value=").concat(data.password, ">\n                    </div>\n                </div>\n                <div class=\"row align-items-center mt-4\">\n                    <div class=\"col\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Address\" id=\"address\" value=").concat(data.address, ">\n                    </div>\n                </div>\n                <div class=\"row justify-content-start mt-4\">\n                    <div class=\"col\">\n                        <div class=\"form-check\">\n                            <label class=\"form-check-label\">\n                                    <input type=\"checkbox\" class=\"form-check-input\">\n                                            I Read and Accept <a href=\"./terms_condition.html\">Terms and Conditions</a>\n                            </label>\n                        </div>\n                        <br>\n                        <div class=\"container\">\n                        <a href=\"#\" class=\"btn btn-info\" role=\"button\" onclick= \"update()\">Submit</a> \n                        </div>\n                    </div>\n                </div>\n            </div>\n            </div>\n        </div>");
}

function getCabById() {
  var cabId = parseInt(localStorage.getItem("id"));
  fetch("http://localhost:8080/customer/get?id=" + cabId).then(function (resp) {
    return resp.json();
  }).then(function (data) {
    console.log(data);
    appendData(data);
  });
}

getCabById();

function update() {
  obj = {};
  obj.customerId = localStorage.getItem("id").value;
  obj.email_address = document.querySelector("#email_address").value;
  obj.username = document.querySelector("#username").value;
  obj.password = document.querySelector("#password").value;
  obj.address = document.querySelector("#address").value;
  obj.phone_number = document.querySelector("#phone_number").value;
  console.log(obj);
  evt.preventDefault();
  fetch("http://localhost:8080/customer/update", {
    method: 'POST',
    body: JSON.stringify(obj),
    headers: {
      "Content-Type": "application/json"
    }
  }).then(function (resp) {
    return resp.json();
  }).then(function (data) {
    alert("Record Inserted");
    window.location.reload();
  })["catch"](function (error) {
    alert("Something Went Wrong");
  });
}

;
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,