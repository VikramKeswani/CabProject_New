/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!**********************************!*\
  !*** ./public/js/user_update.js ***!
  \**********************************/
function appendData(data) {
  var mainContainer = document.getElementById("update_form");
  mainContainer.innerHTML = "<div class=\"container\">      \n        <div class=\"row justify-content-center\">\n            <div class=\"col-12 col-md-8 col-lg-8 col-xl-6\">\n                <div class=\"row\">\n                    <div class=\"col text-center\">\n                        <div class=\"container\">\n                            <h1>UPDATE DETAILS</h1>               \n                        </div>\n                        <br>\n                        <div class=\"container\">\n                        <p class=\"text-h3\" style=\"font-size:2em\">FILL DRIVER DETAILS</p>                        \n                        </div>\n                    </div>\n                </div>\n                <div class=\"row align-items-center\">\n                    <div class=\"col mt-4\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Name\" id=\"username\" value=".concat(data.username, ">\n                    </div>\n                </div>\n                <div class=\"row align-items-center mt-4\">\n                    <div class=\"col\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Unique Id\" id=\"customerId\" value=").concat(data.customerId, " readonly>\n                    </div>\n                </div>\n                <div class=\"row align-items-center mt-4\">\n                    <div class=\"col\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Email Id\" id=\"email_address\" value=").concat(data.email_address, ">\n                    </div>\n                    <div class=\"col\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Passowrd\" id=\"password\" value=").concat(data.password, ">\n                    </div>\n                </div>\n                <div class=\"row align-items-center mt-4\">\n                    <div class=\"col\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Address\" id=\"address\" value=").concat(data.address, ">\n                    </div>\n                </div>\n                <div class=\"row justify-content-start mt-4\">\n                    <div class=\"col\">\n                        <div class=\"form-check\">\n                            <label class=\"form-check-label\">\n                                    <input type=\"checkbox\" class=\"form-check-input\">\n                                            I Read and Accept <a href=\"./terms_condition.html\">Terms and Conditions</a>\n                            </label>\n                        </div>\n                        <br>\n                    </div>\n                </div>\n            </div>\n        </div>");
}

function getCabById() {
  var cabId = parseInt(localStorage.getItem("userid"));
  fetch("http://localhost:8080/customer/get?id=" + cabId).then(function (resp) {
    return resp.json();
  }).then(function (data) {
    console.log(data);
    appendData(data);
  });
}

getCabById();
var update = document.getElementById("inputButton");
update.addEventListener("click", function (event) {
  obj = {};
  console.log(document.getElementById("customerId").value);
  obj.username = document.getElementById("username").value;
  obj.password = document.getElementById("password").value;
  obj.address = document.getElementById("address").value;
  obj.customerId = document.getElementById("customerId").value;
  obj.email_address = document.getElementById("email_address").value;
  var url = "http://localhost:8080/customer/update/";
  fetch(url, {
    method: 'PUT',
    body: JSON.stringify(obj),
    headers: {
      "Content-Type": "application/json"
    }
  }).then(function (data) {
    console.log(url);
    alert("Record updataed sucessfully");
    getCabById();
    window.location.reload();
  });
});
var del = document.getElementById("inputButton2");
del.addEventListener("click", function (event) {
  var cabId = localStorage.getItem("userid");
  var url = "http://localhost:8080/customer/delete/" + cabId;
  fetch(url, {
    method: 'DELETE',
    headers: {
      "Content-Type": "application/json"
    }
  }).then(function (data) {
    console.log(url);
    localStorage.removeItem("userid");
    window.location = "http://127.0.0.1:8081/login.html";
  });
});
var logout = document.getElementById("logout");
logout.addEventListener("click", function (event) {
  event.preventDefault();
  localStorage.removeItem("userid");
  window.location = "http://127.0.0.1:8081/login.html";
});
var home = document.getElementById("home");
home.addEventListener("click", function (event) {
  event.preventDefault();
  window.location = "http://127.0.0.1:8081/user_dashboard.html";
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,